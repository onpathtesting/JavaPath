CREATE TABLE IF NOT EXISTS Run (RunId INTEGER PRIMARY KEY NOT NULL, RunOn TIMESTAMP NOT NULL DEFAULT current_timestamp, ServerLocation VARCHAR(50));
CREATE TABLE IF NOT EXISTS Environment (EnvironmentId INTEGER PRIMARY KEY NOT NULL, Browser VARCHAR(50), BrowserVersion VARCHAR(25), OperatingSystem VARCHAR(50), OperatingSystemVersion VARCHAR(50), unique(Browser,BrowserVersion,OperatingSystem,OperatingSystemVersion));
CREATE TABLE IF NOT EXISTS RunEnvironment (RunEnvironmentId INTEGER PRIMARY KEY NOT NULL, EnvironmentId INT, RunId INT, unique(EnvironmentId,RunId));
CREATE TABLE IF NOT EXISTS Story (StoryId INTEGER PRIMARY KEY NOT NULL, Description VARCHAR(50), Narrative VARCHAR(50), unique(Description));
CREATE TABLE IF NOT EXISTS Scenario (ScenarioId INTEGER PRIMARY KEY NOT NULL, StoryId INT, Description VARCHAR(50), unique(StoryId, Description));
CREATE TABLE IF NOT EXISTS Step (StepId INTEGER PRIMARY KEY NOT NULL, ScenarioId INT, Description VARCHAR(50), unique(ScenarioId, Description));
CREATE TABLE IF NOT EXISTS Meta (MetaId INTEGER PRIMARY KEY NOT NULL, ScenarioId INT, Description VARCHAR(50), unique(ScenarioId, Description));
CREATE TABLE IF NOT EXISTS RunEnvironmentStoryScenarioMetaStep (RunEnvironmentStoryScenarioMetaStepId INTEGER PRIMARY KEY NOT NULL, RunId INT, EnvironmentId INT, MetaId INT, StoryId INT, ScenarioId INT, StepId INT, ResultId INT);
CREATE TABLE IF NOT EXISTS Result (ResultId INTEGER PRIMARY KEY NOT NULL, Description VARCHAR(50), unique (Description));
CREATE VIEW BrowserWise AS  SELECT Browser,Status,SUM(Value) as Value FROM (SELECT X.Browser,X.Status,ROUND(100*X.Value/Y.Total,0) as Value FROM  (SELECT A.Browser, B.Description as Status,COUNT(A.ResultId) as Value FROM ( SELECT A.RunId, B.Browser as Browser,  StoryId, MAX(ResultId) as ResultId FROM RunEnvironmentStoryScenarioMetaStep A INNER JOIN Environment B USING(EnvironmentId) GROUP BY RunId, Browser,StoryId ) A INNER JOIN Result B ON B.ResultId = A.ResultId GROUP BY 1,2 ) X  INNER JOIN  ( SELECT A.Browser, COUNT(A.ResultId) as Total FROM ( SELECT A.RunId, B.Browser as Browser,  StoryId, MAX(ResultId) as ResultId FROM RunEnvironmentStoryScenarioMetaStep A INNER JOIN Environment B USING(EnvironmentId) GROUP BY RunId, Browser,StoryId ) A INNER JOIN Result B ON B.ResultId = A.ResultId GROUP BY 1 ) Y ON Y.Browser = X.Browser  UNION  SELECT DISTINCT B.Browser as Browser,  C.Description as Status, 0 as Value FROM Environment B  INNER JOIN Result C ) GROUP BY 1,2;
CREATE VIEW OperatingSystemWise AS  SELECT OperatingSystem,Status,SUM(Value) as Value FROM ( SELECT X.OperatingSystem,X.Status,100*X.Value/Y.Total as Value  FROM  ( SELECT A.OperatingSystem, B.Description as Status,COUNT(A.ResultId) as Value FROM ( SELECT A.RunId, B.OperatingSystem as OperatingSystem,  StoryId, MAX(ResultId) as ResultId FROM RunEnvironmentStoryScenarioMetaStep A INNER JOIN Environment B USING(EnvironmentId) GROUP BY RunId, OperatingSystem,StoryId ) A  INNER JOIN Result B ON B.ResultId = A.ResultId GROUP BY 1,2  ) X  INNER JOIN  ( SELECT A.OperatingSystem, COUNT(A.ResultId) as Total FROM ( SELECT A.RunId, B.OperatingSystem as OperatingSystem,  StoryId, MAX(ResultId) as ResultId FROM RunEnvironmentStoryScenarioMetaStep A INNER JOIN Environment B USING(EnvironmentId) GROUP BY RunId, OperatingSystem,StoryId ) A INNER JOIN Result B ON B.ResultId = A.ResultId GROUP BY 1  ) Y ON Y.OperatingSystem = X.OperatingSystem  UNION  SELECT DISTINCT B.OperatingSystem as Browser,  C.Description as Status, 0 as Value FROM Environment B  INNER JOIN Result C ) GROUP BY 1,2;
CREATE VIEW BrowserTrend AS SELECT ExecutedOn, Browser, ROUND(100*SUM(Success)/SUM(Total),0) as Value FROM ( SELECT strftime('%d-%m-%Y', A.RunOn) as ExecutedOn, C.Browser, B.StoryId,B.RunId,1 as Success,0 as Total FROM Run A INNER JOIN RunEnvironmentStoryScenarioMetaStep B ON A.RunId = B.RunId INNER JOIN Environment C ON B.EnvironmentId = C.EnvironmentId GROUP BY 1,2,3,4 HAVING MAX(B.ResultId) = 2 UNION SELECT strftime('%d-%m-%Y', A.RunOn) as ExecutedOn, C.Browser, B.StoryId,B.RunId,0,1 FROM Run A INNER JOIN RunEnvironmentStoryScenarioMetaStep B ON A.RunId = B.RunId INNER JOIN Environment C ON B.EnvironmentId = C.EnvironmentId GROUP BY 1,2,3,4 ) GROUP BY 1,2;
CREATE VIEW OperatingSystemTrend AS SELECT ExecutedOn, OperatingSystem, ROUND(100*SUM(Success)/SUM(Total),0) as Value FROM ( SELECT strftime('%d-%m-%Y', A.RunOn) as ExecutedOn, C.OperatingSystem, B.StoryId,B.RunId,1 as Success,0 as Total FROM Run A INNER JOIN RunEnvironmentStoryScenarioMetaStep B ON A.RunId = B.RunId INNER JOIN Environment C ON B.EnvironmentId = C.EnvironmentId GROUP BY 1,2,3,4 HAVING MAX(B.ResultId) = 2 UNION SELECT strftime('%d-%m-%Y', A.RunOn) as ExecutedOn, C.OperatingSystem, B.StoryId,B.RunId,0,1 FROM Run A INNER JOIN RunEnvironmentStoryScenarioMetaStep B ON A.RunId = B.RunId INNER JOIN Environment C ON B.EnvironmentId = C.EnvironmentId GROUP BY 1,2,3,4 ) GROUP BY 1,2;
CREATE VIEW QualityMeter AS  SELECT 100*SUM(Success) / SUM(Ignored+Success +Pending+NotPerformed +Failed) as Value FROM ( SELECT StoryId, RunId,EnvironmentId, 1 as Ignored, 0 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A GROUP BY 1,2,3 HAVING MAX(ResultId) = 1 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 1 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A GROUP BY 1,2,3 HAVING MAX(ResultId) = 2 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success ,1 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A GROUP BY 1,2,3 HAVING MAX(ResultId) = 3 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success , 0 as Pending, 1 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A GROUP BY 1,2,3 HAVING MAX(ResultId) = 4 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored,0 as Success , 0 as Pending, 0 as NotPerformed , 1 as Failed FROM RunEnvironmentStoryScenarioMetaStep A GROUP BY 1,2,3 HAVING MAX(ResultId) = 5 );
CREATE VIEW QualityMonitoring AS SELECT SUM(CurrentValue)  - SUM(LastValue) as Value, (SELECT strftime('%d-%m-%Y', RunOn) FROM Run WHERE RunId = (SELECT MAX(RunId)-1 FROM Run)) as RunOn FROM ( SELECT 100*SUM(Success) / SUM(Ignored+Success +Pending+NotPerformed +Failed) as CurrentValue, 0 as LastValue FROM ( SELECT StoryId, RunId,EnvironmentId, 1 as Ignored, 0 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 1 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 1 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 2 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success ,1 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 3 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success , 0 as Pending, 1 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 4 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored,0 as Success , 0 as Pending, 0 as NotPerformed , 1 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 5 ) UNION SELECT 0, 100*SUM(Success) / SUM(Ignored+Success +Pending+NotPerformed +Failed)  FROM ( SELECT StoryId, RunId,EnvironmentId, 1 as Ignored, 0 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) - 1  FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 1 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 1 as Success , 0 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) - 1  FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 2 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success ,1 as Pending, 0 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) - 1  FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 3 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored, 0 as Success , 0 as Pending, 1 as NotPerformed , 0 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) - 1  FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 4 UNION SELECT StoryId, RunId,EnvironmentId, 0 as Ignored,0 as Success , 0 as Pending, 0 as NotPerformed , 1 as Failed FROM RunEnvironmentStoryScenarioMetaStep A WHERE A.RunId = (SELECT MAX(RunId) - 1  FROM Run) GROUP BY 1,2,3 HAVING MAX(ResultId) = 5 ) );
CREATE VIEW FailureReport AS SELECT A.Description as Story, B.Description as Scenario, C.Description as Step, D.Description as Meta, E.Browser, E.BrowserVersion, E.OperatingSystem, E.OperatingSystemVersion, F.Description as Result FROM  RunEnvironmentStoryScenarioMetaStep X INNER JOIN Story A USING(StoryId) INNER JOIN Scenario B USING(StoryId) INNER JOIN Step C USING(ScenarioId) INNER JOIN Meta D USING(ScenarioId) INNER JOIN Environment E USING(EnvironmentId) INNER JOIN Result F USING(ResultId) WHERE X.RunId = (SELECT MAX(RunId) FROM Run) AND ResultId <> 2;